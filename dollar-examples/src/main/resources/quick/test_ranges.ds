#("a".."c") <=> 1
#["a".."c") <=> 2
#("a".."c"] <=> 2
#["a".."c"] <=> 3
(1..3) [0] <=>2
[1..3) [0] <=>1
(1..3] [1] <=>3
[1..3] [1] <=>2
(..)

#[1..1] type Integer
# [1..2] <=> 2

//count
# (1..1] <=> void
# [1..1] <=> 1
# [1..1) <=> void

#([1..5]) <=> 5
(1..5)[0] <=> 2
["a".."c"] reduce ($1+$2) <=> "abc"

(1..5) <=> (1..5)

(5..1)[1] <=> 3

//Bounds
.: ! (1 in (1..5))
.:  (1 in [1..5))
.: 3 in (1..5)
.: !(5 in (1..5))
.: 5 in (1..5]
.: !(0 in (1..5))
.: !(6 in (1..5))

.: (1..5) type Range
.: [1..5) type Range
.: [1..5] type Range
.: (1..5] type Range
.: (..5] type Range
.: (5..] type Range
.: (..) type Range

//Iterate over a range
var y=0
for x in [1..5] {
    y= y++
}
y <=> 5

