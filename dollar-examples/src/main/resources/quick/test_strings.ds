
"1,2,3" / "," <=> ["1","2","3"]

"1,2,3" / "," each { $1 as integer} <=> [1,2,3]

///////////////////////////////////////////////////////////////////////////////

//Lambda multiplication ;-)
volatile a=0
// This is actually 1+2+3, lambda multiplication uses x+x+x to equal x*3
@@ a

@@ { a= a + 1; a } * 2

a=0
&( { a= a + 1; a } * 3 ) <=> 6

///////////////////////////////////////////////////////////////////////////////

a=0
@@ &a
{ a=a+1; a } * 4 <=> 10

var b=0
{ b=b+1; [b]; } * 3  <=> [1,2,3]

///////////////////////////////////////////////////////////////////////////////

//Make sure this is not treated as a lambda (if it is this will hang, as it needs to add one to the value 1000000000000 times.

const c=1
@@ ((c * 1000000000000) + 100)
