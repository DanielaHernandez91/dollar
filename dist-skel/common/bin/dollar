#!/bin/bash -eu
cd "$(dirname $0)/.." 2&>1 /dev/null
export DOLLAR_HOME=$(pwd)
if [[ "$OSTYPE" == "linux-gnu" ]]; then
       os=linux
       durl=http://dl.bintray.com/neilellis/dollar/zulu1.8.0_25-8.4.0.1-x86lx64.zip
elif [[ "$OSTYPE" == "darwin"* ]]; then
       os=macosx
       durl=http://dl.bintray.com/neilellis/dollar/zulu1.8.0_25-8.4.0.1-macosx.zip
elif [[ "$OSTYPE" == "cygwin" ]]; then
       echo "Unsupported operating system $OSTYPE would you consider porting this simple script?" && exit 1
elif [[ "$OSTYPE" == "msys" ]]; then
       echo "Unsupported operating system $OSTYPE would you consider porting this simple script?" && exit 1
elif [[ "$OSTYPE" == "win32" ]]; then
       echo "Unsupported operating system $OSTYPE would you consider porting this simple script?" && exit 1
elif [[ "$OSTYPE" == "freebsd"* ]]; then
       echo "Unsupported operating system $OSTYPE would you consider porting this simple script?" && exit 1
else
       echo "Unsupported operating system $OSTYPE would you consider porting this simple script?" && exit 1
fi

if [[ ! -e ${DOLLAR_HOME}/jdk ]]
then
    echo "Downloading a valid Java 1.8 JDK for OS type: ${os}"
    echo
    echo "Use of the JDK is under the terms of:"
    echo
    echo "     http://www.azulsystems.com/products/zulu/terms-of-use"
    echo "     and http://openjdk.java.net/legal/"
    echo
    echo
    echo "If you do not agree, please delete the contents of"
    echo "${DOLLAR_HOME} and ${HOME}/.dollar-cache"
    echo
    echo "This may take some time, but hey you only need to do it once."
    echo ""
    [ -d ~/.dollar-cache ] || mkdir ~/.dollar-cache
    [ -f ~/.dollar-cache/jdk.zip ] || curl -L ${durl}  > ~/.dollar-cache/jdk.zip
    unzip -q ~/.dollar-cache/jdk.zip -d .
    mv zulu* jdk
fi
cd -  2&>1 /dev/null
export JAVA_HOME=${DOLLAR_HOME}/jdk/
if [ $# -ne 1 ]
then
    echo "Usage: dollar <filename>.ds"
    exit 1
fi

${DOLLAR_HOME}/jdk/jre/bin/java -classpath "${DOLLAR_HOME}/lib/*:${DOLLAR_HOME}/ext:${DOLLAR_HOME}/plugins/*:${HOME}/.dollar/lib" me.neilellis.dollar.main.ParserMain $@
