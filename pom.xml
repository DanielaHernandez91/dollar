<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <properties>
        <jdk.version>1.8</jdk.version>
        <kotlin.version>0.8.11</kotlin.version>
    </properties>

    <groupId>me.neilellis</groupId>
    <artifactId>dollar</artifactId>
    <version>0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>Dollar</name>
    <description>Lightweight, dynamic data oriented Java</description>
    <contributors>
        <contributor>
            <name>Neil Ellis</name>
            <organization>Cazcade Limited</organization>
            <organizationUrl>http://cazcade.com</organizationUrl>
            <roles>
                <role>founder</role>
                <role>developer</role>
            </roles>
            <timezone>GMT</timezone>
            <email>neil@cazcade.com</email>
        </contributor>
    </contributors>

    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <scm>
        <url>https://github.com/neilellis/dollar/blob/master/</url>
        <connection>scm:git:git@github.com:neilellis/dollar.git</connection>
        <developerConnection>scm:git:git@github.com:neilellis/dollar.git</developerConnection>
    </scm>

    <modules>
        <module>dollar-core</module>
        <module>dollar-examples</module>
    </modules>

    <dependencies>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-core</artifactId>
            <version>2.1.2</version>
        </dependency>
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>20140107</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12-beta-2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>18.0</version>
        </dependency>
    </dependencies>

    <!-- mvn surefire-report:report -->
    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>2.14</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>2.7</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>project-team</report>
                            <report>mailing-list</report>
                            <report>issue-tracking</report>
                            <report>license</report>
                            <report>scm</report>
                            <report>index</report>
                            <report>summary</report>
                            <report>cim</report>
                            <report>plugins</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-changes-plugin</artifactId>
                <version>2.11</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>changes-report</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-changelog-plugin</artifactId>
                <version>2.3</version>
            </plugin>
        </plugins>
    </reporting>

    <build>

        <plugins>
            <!-- The Compiler Plugin is used to compile the sources of your project.
                The default compiler is javac and is used to compile Java sources. Also note
                that at present the default source setting and default target setting is
                1.5, independently of the JDK you run Maven with. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <source>${jdk.version}</source>
                    <target>${jdk.version}</target>
                </configuration>
            </plugin>
            <!-- This plugin provides the capability to build and sign jars. If the
                packaging of your project is set to 'jar', this plugin is executed whenever
                it passes the "package" phase. default: 2.3.2 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>dependency-jars/</classpathPrefix>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>

            <!-- The dependency plugin provides the capability to manipulate artifacts.
               It can copy and/or unpack artifacts from local or remote repositories to
               a specified location. -->

            <!-- copy-dependencies - Goal that copies the project dependencies from
               the repository to a defined location. -->
            <!-- optional step -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.5.1</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeGroupIds>log4j</includeGroupIds>
                            <outputDirectory>
                                ${project.build.directory}/dependency-jars/
                            </outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- maven-surefire-plugin: The Surefire Plugin is used during the test
                phase of the build lifecycle. It executes the unit tests of an application. -->
            <!-- It generates reports in 2 different file formats: Plain text files
                (*.txt) XML files (*.xml)
                                 By default, these files are generated at ${basedir}/target/surefire-reports.
                          -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.11</version>
                <configuration>
                    <redirectTestOutputToFile>true</redirectTestOutputToFile>
                    <jvm>${JAVA.EXE}</jvm>
                    <includes>
                        <include>**/*Test.java</include>
                    </includes>
                </configuration>
            </plugin>

            <!--Add JavaDoc and sources to build, to go in a maven repository-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.9</version>
                <configuration>
                    <doclet>ch.raffael.doclets.pegdown.PegdownDoclet</doclet>
                    <docletArtifact>
                        <groupId>ch.raffael.pegdown-doclet</groupId>
                        <artifactId>pegdown-doclet</artifactId>
                        <version>1.1</version>
                    </docletArtifact>
                    <useStandardDocletOptions>true</useStandardDocletOptions>
                </configuration>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>

                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>2.2</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-scm-plugin</artifactId>
                <version>1.8.1</version>
                <configuration>
                    <tag>${project.artifactId}-${project.version}</tag>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-scm-publish-plugin</artifactId>
                <version>1.0-beta-2</version>
                <configuration>
                    <excludes>.DS_Store</excludes>
                    <checkoutDirectory>${project.build.directory}/scmpublish</checkoutDirectory>
                    <checkinComment>Publishing Github Website for ${project.version}</checkinComment>
                    <content>${project.build.directory}/staging</content>
                    <skipDeletedFiles>false</skipDeletedFiles>
                    <pubScmUrl>scm:git:git@github.com:neilellis/dollar.git</pubScmUrl>
                    <scmBranch>gh-pages</scmBranch>
                    <!-- branch with static site -->
                </configuration>
            </plugin>

            <!--Now produce a pretty website on github-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>3.4</version>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.doxia</groupId>
                        <artifactId>doxia-module-markdown</artifactId>
                        <version>1.3</version>
                    </dependency>
                    <dependency>
                        <groupId>org.apache.maven.skins</groupId>
                        <artifactId>maven-fluido-skin</artifactId>
                        <version>1.3.1</version>
                    </dependency>
                    <!-- Reflow skin requires Velocity >= 1.7  -->
                    <!--<dependency>-->
                    <!--<groupId>org.apache.velocity</groupId>-->
                    <!--<artifactId>velocity</artifactId>-->
                    <!--<version>1.7</version>-->
                    <!--</dependency>-->
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-gpg-plugin</artifactId>
                <version>1.5</version>
                <executions>
                    <execution>
                        <id>sign-artifacts</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>sign</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>2.3</version>
                <configuration>
                    <shadedArtifactAttached>true</shadedArtifactAttached>
                    <shadedClassifierName>fat</shadedClassifierName>
                    <filters>
                        <filter>
                            <!--
                                Exclude files that sign a jar
                                (one or multiple of the dependencies).
                                One may not repack a signed jar without
                                this, or you will get a
                                SecurityException at program start.
                            -->
                            <artifact>*:*</artifact>
                            <excludes>
                                <exclude>META-INF/*.SF</exclude>
                                <exclude>META-INF/*.RSA</exclude>
                                <exclude>META-INF/*.INF</exclude>
                                <!-- This one may not be required -->
                            </excludes>
                        </filter>
                    </filters>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!--<plugin>-->
            <!--<artifactId>kotlin-maven-plugin</artifactId>-->
            <!--<groupId>org.jetbrains.kotlin</groupId>-->
            <!--<version>${kotlin.version}</version>-->

            <!--<executions>-->
            <!--<execution>-->
            <!--<id>compile</id>-->
            <!--<phase>process-sources</phase>-->
            <!--<goals>-->
            <!--<goal>compile</goal>-->
            <!--</goals>-->
            <!--</execution>-->

            <!--<execution>-->
            <!--<id>test-compile</id>-->
            <!--<phase>process-test-sources</phase>-->
            <!--<goals>-->
            <!--<goal>test-compile</goal>-->
            <!--</goals>-->
            <!--</execution>-->
            <!--</executions>-->
            <!--</plugin>-->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>2.1</version>
            </plugin>
        </plugins>
    </build>


    <distributionManagement>
        <site>
            <id>http://neilellis.github.io/dollar</id>
            <url>scm:git:git@github.com:neilellis/dollar.git</url>
        </site>
        <repository>
            <id>bintray-neilellis-maven-dollar</id>
            <name>neilellis-maven-dollar</name>
            <url>https://api.bintray.com/maven/neilellis/maven/dollar</url>
        </repository>
    </distributionManagement>


</project>
